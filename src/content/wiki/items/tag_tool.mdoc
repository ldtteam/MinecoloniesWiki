---
type: item
item: structurize/tag_tool
---

The Tag Tool is a creative-only item used to help build custom [schematics](/wiki/tutorials/schematics). It allows "tags" (specific words or phrases) to be attached to specific blocks in the schematic. Any tag can be attached to any block, but only specific ones will do something. Some building types require specific tags in order to function correctly, while others are optional.

## Using the Tag Tool

1. Shift-right-click the anchor block of the schematic that you want to view or edit. This will highlight it with a red border and make the associated tags visible.

    * For a building with a hut block (also including the fields), the hut block is the anchor block.
    * For an upgradeable decoration, the {% item name="deco_controller" /%} is the anchor block.
    * For any other decoration, you must place a {% item name="tag_anchor" /%} as the anchor block.

2. While you are holding the tag tool, you will see all existing tags overlaying their blocks in-world, and they will be highlighted with a white border.

3. Right-click the tag tool in the air to open its GUI. This allows you to type in the tag that you want to apply or remove. Close the GUI afterwards. The GUI also shows a list of all currently tagged blocks.


4. Left-click on a block to apply the current tag to that block. Left-click again to remove the tag.

    * It is possible (although unusual) for a single block to have multiple tags. To remove a tag it must be the current tag entered in the GUI.

5. When finished, use the {% item name="scan_tool" /%} to save the schematic, including the tags. Tags will only take effect if the anchor block for the scan is the same anchor used to store the tags. (When there is only one anchor block in the scan area, it will be selected automatically; if you are including multiple hut blocks in a single schematic then you may need to select the right one manually.)

## Current Tags

The following tags are currently implemented (more may be added from time to time):

* `groundlevel`

    This tag is supported by all huts and decorations. It is optional. When included, it should only appear on exactly one block in the schematic that is at the nominal "ground level" of the building -- i.e. any blocks below this should be an underground "basement" area, blocks at the same level should be dirt/grass/other ground blocks (often {% item name="placeholderblocks" /%}) are used for this, while underground can be either solid or light placeholders outside of the intended basement area), and blocks above should be the actual building. (If it is specified on more than one block, then only one will take effect. This is harmless if they're all on the same y level but can be confusing if not; hence the recommendation to stick with one at most.)

    When not included, the block immediately below the anchor block is assumed to be the ground level. It is recommended that the `groundlevel` tag be explicitly specified whenever the anchor block is placed anywhere other than directly on the intended ground level (or to just always specify it regardless, for safety).

    This affects the default alignment of the {% item name="build_tool" /%} -- assuming that the player clicks the build tool on the ground (as is usually the case) it will align the groundlevel of the schematic to this position as well, so that they are less likely to bury the building underground or put the basement above.

    As such, this should be used even for "underground" styles -- in this case the ground level means the nominal "floor" of the colony area (where they're clicking the build tool), not necessarily the surface ground level.

* `leisure`

    Supported only by Decoration Controllers, not huts or the tag anchor. It is optional. When included, it must appear directly on the decoration controller itself.
    
    Including this tag indicates that this decoration is intended as a "leisure site" for colonists to visit when they're otherwise idle. Leisure sites may optionally include `sit` tags, and colonists will also just wander around.
    
    In addition to tagged decorations, colonists will also always treat L3+ Town Hall and L1+ Mystical Site, Library, and Tavern as leisure sites.

* `invisible`

    1.19+ only; supported by all huts and decorations. It is optional. When included, it must appear directly on the anchor block (hut, decoration controller, or tag anchor).
    
    When present, this marks the corresponding schematic blueprint as "invisible" to normal players -- it will not be listed in the build tool in survival mode at all. In creative mode, the schematic will be visible but specially marked.
    
    This is intended to be placed on buildings or decorations that are not intended to be built on their own, but rather only as children of some other parent building/decoration.
    
    The {% building name="barrackstower" /%} is implicitly invisible even if not tagged as such, for backwards compatibility.

* Building-specific tags

    The following tags are only used by specific building types:

    | Tag            | Used By                             | Amount      | Description                                                                                                                               |
    | ---------------| ----------------------------------- | ----------- | ----------------------------------------------------------------------------------------------------------------------------------------- |
    | `sit`          | {% building name="cook" /%}         | 0-many      | A "chair" where colonists will sit to eat their food                                                                                      |
    | `sit`          | {% building name="tavern" /%}       | 0-many (~4) | A "chair" where visitors will occasionally sit                                                                                            |
    | `sit`          | (leisure)                           | 0-many      | A "chair" where colonists will occasionally sit                                                                                           |
    | `cobble`       | {% building name="miner" /%}        | Always 1    | The block behind the top-most ladder at the start of the mineshaft (traditionally cobblestone, but may be something else)                 |
    | `ladder`       | {% building name="miner" /%}        | Always 1    | The top-most ladder at the start of the mineshaft                                                                                         |
    | `bamboo`       | {% building name="plantation" /%}   | level-based | A block that bamboo can be planted on ([legacy](/wiki/tutorials/schematics#plantation-fields))                                            |
    | `cactus`       | {% building name="plantation" /%}   | level-based | A block that cactus can be planted on ([legacy](/wiki/tutorials/schematics#plantation-fields))                                            |
    | `sugar`        | {% building name="plantation" /%}   | level-based | A block that sugarcane can be planted on ([legacy](/wiki/tutorials/schematics#plantation-fields))                                         |
    | `portal`       | {% building name="netherworker" /%} | Always 1    | An obsidian block in the bottom of the nether portal (with air above)                                                                     |
    | `vault`        | {% building name="netherworker" /%} | 0-1         | A block in an enclosed room that the nether miner can stand on while "away"                                                               |
    | `work`         | {% building name="archery" /%}      | level-based | The block the {% worker name="archer" /%} in Training stands on to shoot at targets (Note: If no tags are used, they look for glowstone.) |
    | `job=miner`    | {% building name="miner" /%}        | Always 1    | Sets the mine's worker to be only {% worker name="miner" /%}                                                                              |
    | `job=quarrier` | {% building name="miner" /%}        | Always 1    | Sets the mine's worker to be only {% worker name="quarrier" /%}                                                                           |
    | `job=knight`   | {% building name="guardtower" /%}   | Always 1    | Sets the Guard Tower's worker to be only {% worker name="knight" /%}                                                                      |
    | `job=ranger`   | {% building name="guardtower" /%}   | Always 1    | Sets the Guard Tower's worker to be only {% worker name="archer" /%}                                                                      |
    | `job=druid`    | {% building name="guardtower" /%}   | Always 1    | Sets the Guard Tower's worker to be only {% worker name="druid" /%}                                                                       |
