---
import '../css/bootstrap.scss';
import '../css/globals.scss';

import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import Meta from '@components/Meta.astro';
import Navigation from '@components/navbar/Navigation.astro';
import PageRoot from '@components/PageRoot.astro';
import PageTitleRender from '@components/wiki/PageTitleRender.astro';
import fondamentoWoff2 from '@fontsource/fondamento/files/fondamento-latin-400-normal.woff2?url';
import { getNewestVersion } from '@utils/version';
import type { Title } from '@utils/wiki';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: Title;
  titleAffix?: string;
  header?: string;
  showHeader?: boolean;
  fluid?: boolean;
}

const { title, titleAffix = 'MineColonies', header = title, showHeader = true, fluid = false } = Astro.props;

const isHome = Astro.url.pathname === '/';
const isWikiPage = Astro.url.pathname.startsWith('/wiki');

const newestVersion = await getNewestVersion();

let versionTitleData: Record<string, string>;
if (typeof title === 'object') {
  versionTitleData = title.reduce<Record<string, string>>((previousValue, currentValue) => {
    for (const version of currentValue.versions) {
      previousValue['data-title-version-' + version.data.order] = currentValue.title;
    }
    return previousValue;
  }, {});
} else {
  versionTitleData = { 'data-title-version-all': title };
}

const initialTitle =
  typeof title === 'string'
    ? title
    : title.find((f) => f.versions.map((v) => v.id).includes(newestVersion.id))?.title + ' | ' + titleAffix;

const hasLeftSlot = await Astro.slots.render('left').then((slot) => (slot ?? '').trim() !== '');
const hasRightSlot = await Astro.slots.render('right').then((slot) => (slot ?? '').trim() !== '');

const totalColumns = 7;
const remainingColumns = 7 - (hasLeftSlot ? 1 : 0) - (hasRightSlot ? 1 : 0);
---

<!doctype html>
<html lang="en" transition:persist>
  <head>
    <link href="/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />

    <link rel="preload" as="font" type="font/woff2" href={fondamentoWoff2} crossorigin />

    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"></script>

    <title property="og-title,twitter:title">
      {initialTitle}
    </title>

    <slot name="meta">
      <Meta isWiki={isWikiPage} title={initialTitle} />
    </slot>

    <script is:inline>
      function updateTitle(version) {
        let newTitle;
        if (document.body.dataset.titleVersionAll) {
          newTitle = document.body.dataset.titleVersionAll;
        } else {
          newTitle = document.body.dataset[`titleVersion-${version}`];
        }
        document.title = `${newTitle} | ${document.body.dataset.titleAffix ?? 'Minecolonies'}`;
      }

      function update(mutations) {
        for (const mutation of mutations) {
          if (mutation.type === 'attributes' && mutation.attributeName === 'data-version') {
            updateTitle(mutation.target.dataset.version);
          }
        }
      }

      const versionObserver = new MutationObserver(update);

      function setup() {
        versionObserver.observe(document.body, { attributes: true });
        updateTitle(document.body.dataset.version);
      }

      document.addEventListener('astro:page-load', setup);
    </script>

    <ViewTransitions />
  </head>
  <body data-latest-version={newestVersion.data.order} {...versionTitleData} data-title-affix={titleAffix}>
    <PageRoot isHome={isHome}>
      <Header isWiki={isWikiPage} />
      <Navigation isWiki={isWikiPage} />

      <div transition:animate="fade" class="page-content px-5">
        {
          showHeader && (
            <h1 class="page_header text-center m-0">
              <PageTitleRender title={header} />
            </h1>
          )
        }

        <div
          class:list={[fluid ? 'container-fluid' : 'container', 'grid w-100']}
          style={`--bs-columns: ${totalColumns};`}
        >
          {
            hasLeftSlot && (
              <div class="g-col-12 g-col-lg-1">
                <slot name="left" />
              </div>
            )
          }
          <div class:list={['g-col-12', `g-col-lg-${remainingColumns}`]}>
            <div class="container">
              {showHeader && <hr />}
            </div>
            <slot />
          </div>
          {
            hasRightSlot && (
              <div class="g-col-12 g-col-lg-1">
                <slot name="right" />
              </div>
            )
          }
        </div>
      </div>
      <Footer />
    </PageRoot>
  </body>
</html>
