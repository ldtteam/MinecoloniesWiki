---
import '../css/globals.scss';
import '@fontsource/fondamento';

import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import Meta from '@components/Meta.astro';
import Navigation from '@components/navbar/Navigation.astro';
import PageRoot from '@components/PageRoot.astro';
import VersionContent from '@components/version/VersionContent.astro';
import { getNewestVersion } from '@utils/version';
import type { CollectionEntry } from 'astro:content';
import { ViewTransitions } from 'astro:transitions';

export interface TitleVersion {
  version: CollectionEntry<'versions'>;
  title: string;
}

interface Props {
  title: TitleVersion[] | string;
  titleAffix?: string;
  header?: string;
  fluid?: boolean;
}

const { title, titleAffix = 'MineColonies', header = title, fluid = false } = Astro.props;

const isHome = Astro.url.pathname === '/';
const isWikiPage = Astro.url.pathname.startsWith('/wiki');

const newestVersion = await getNewestVersion();

let versionTitleData: Record<string, string> = {};
if (typeof title === 'object') {
  versionTitleData = title.reduce<Record<string, string>>((previousValue, currentValue) => {
    previousValue['data-version-' + currentValue.version.data.order] = currentValue.title;
    return previousValue;
  }, {});
}
---

<!doctype html>
<html lang="en" transition:persist>
  <head>
    <link href="/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />

    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"></script>

    <title property="og-title">
      {typeof title === 'string' ? title : title.find((f) => f.version.id === newestVersion.id)?.title} | {titleAffix}
    </title>

    <Meta />

    <script data-title-affix={titleAffix} {...versionTitleData} is:inline>
      const titleData = document.currentScript.dataset;
      const titleAffix = titleData.titleAffix ?? 'Minecolonies';

      const versionObserver = new MutationObserver((mutations) => {
        for (const mutation of mutations) {
          if (mutation.type === 'attributes' && mutation.attributeName === 'data-version') {
            const newTitle = titleData[`version-${mutation.target.dataset.version}`];
            document.title = `${newTitle} | ${titleAffix}`;
          }
        }
      });

      function setup() {
        versionObserver.observe(document.body, { attributes: true });
      }

      document.addEventListener('astro:after-swap', setup);
      document.addEventListener('DOMContentLoaded', setup);
    </script>

    <ViewTransitions />
  </head>
  <body data-latest-version={newestVersion.data.order}>
    <PageRoot isHome={isHome}>
      <div class="page_root p-5">
        <Header isWiki={isWikiPage} />
        <Navigation />
        <slot name="after-nav" />

        <main transition:animate="fade" class:list={['page_content', 'container', fluid ? 'container-fluid' : '']}>
          <h1 data-pagefind-meta="title" class="page_header text-center">
            {
              typeof header === 'string'
                ? header
                : header.map((version) => <VersionContent versions={[version.version]}>{version.title}</VersionContent>)
            }
          </h1>
          <hr />

          <slot data-pagefind-body />
        </main>
        <Footer />
      </div>
    </PageRoot>
  </body>
</html>
