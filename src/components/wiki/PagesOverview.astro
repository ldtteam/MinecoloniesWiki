---
import Button from '@components/ui/Button.astro';
import { getWikiPages } from '@utils/wiki';

import PageTitleRender from './PageTitleRender.astro';

const wikiPages = await getWikiPages();
---

{
  (
    <div class="pages-grid">
      {Array.from(wikiPages).map(([category, pages]) => (
        <div class="text-center d-flex flex-column">
          <Button text={category.data.name} class="text-nowrap mb-2" component="h3" />
          {pages.map((page, idx) => {
            if (page.type === 'page') {
              return (
                <a href={`/wiki/${page.id}`}>
                  <PageTitleRender title={typeof page.name === 'string' ? page.name : [page.name]} />
                </a>
              );
            } else if (page.type === 'subcategory') {
              return (
                <>
                  <p class:list={['m-0', idx === 0 ? '' : 'mt-3']}>{page.name}</p>
                  {page.pages.map((subPage) => (
                    <a href={`/wiki/${subPage.id}`}>{subPage.name}</a>
                  ))}
                </>
              );
            }

            return undefined;
          })}
        </div>
      ))}
    </div>
  )
}

<style lang="scss">
  @import '../../css/bootstrap-vars.scss';

  .pages-grid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    width: 100%;
    gap: 1em;
  }

  @include media-breakpoint-down(xxl) {
    .pages-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  @include media-breakpoint-down(md) {
    .pages-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @include media-breakpoint-down(sm) {
    .pages-grid {
      grid-template-columns: repeat(1, 1fr);
    }
  }

  .pages-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
    width: 100%;
    gap: 1em;

    & > div {
      width: min-content;
    }
  }
</style>
