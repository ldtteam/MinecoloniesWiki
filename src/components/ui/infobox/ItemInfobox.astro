---
import ItemName from '@components/markdoc/ItemName.astro';
import VersionContent from '@components/version/VersionContent.astro';
import { getItemData } from '@utils/items';
import { Image } from 'astro:assets';
import { getEntry } from 'astro:content';

import Infobox from './Infobox.astro';
import RecipeGrid from './RecipeGrid.astro';

interface Props {
  item: string;
  expand?: boolean;
}

const { item, expand = false } = Astro.props;

const itemData = await getItemData(item, true);

const recipeData = await getEntry('recipes', item);
---

<Infobox class:list={['w-auto', 'flex-shrink-1', expand ? 'h-100' : '']} expand={expand}>
  <ItemName slot="title" data={itemData} link={false} />

  <div class="text-center">
    {
      itemData.data.map((item) => (
        <VersionContent versions={item.versions}>
          <swiper-container
            pagination
            pagination-dynamic-bullets
            autoplay={item.icons.length > 2}
            autoplay-delay="2000"
            autoplay-pause-on-mouse-enter
            autoplay-disable-on-interaction="false"
            loop={item.icons.length > 1}
            loop-add-blank-slides
            slides-per-view={item.icons.length > 1 ? '2' : '1'}
            slides-per-group={item.icons.length > 1 ? '2' : '1'}
            no-swiping
            no-swiping-selector="*"
            width="300"
            space-between="20"
            style={{
              width: '300px',
              '--swiper-pagination-bottom': 0
            }}
          >
            {item.icons.map((icon) => (
              <swiper-slide>
                <Image src={icon} alt="" width={150} />
              </swiper-slide>
            ))}
          </swiper-container>
        </VersionContent>
      ))
    }
  </div>

  {recipeData !== undefined && <RecipeGrid recipes={[item]} />}
</Infobox>

<style>
  .recipe-grid {
    display: grid;
    grid-template-columns: auto max-content;
    gap: 0.5em;
  }
</style>
