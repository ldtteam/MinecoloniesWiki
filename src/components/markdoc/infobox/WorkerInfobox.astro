---
import Wrapper from '@components/ui/infobox/Wrapper.astro';
import { getWorkerData, type MarkdocWorkerComponent } from '@utils/workers';
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import path from 'path';

import Infobox from '../../ui/infobox/Infobox.astro';
import BuildingName from '../BuildingName.astro';
import WorkerName from '../WorkerName.astro';

type Props = MarkdocWorkerComponent;

const { workerId } = Astro.props;
const workerData = await getWorkerData(workerId ?? '');

function sortImages(s1: string, s2: string): number {
  const file1 = path.parse(s1);
  const file2 = path.parse(s2);

  const gender1 = path.basename(file1.dir);
  const gender2 = path.basename(file2.dir);

  const [_1, style1, variant1] = file1.name.match(/(\w+)-(\w+)/) ?? [];
  const [_2, style2, variant2] = file2.name.match(/(\w+)-(\w+)/) ?? [];

  const styleCompare = style1.localeCompare(style2);
  if (styleCompare !== 0) {
    return styleCompare;
  }

  const variantCompare = variant1.localeCompare(variant2);
  if (variantCompare !== 0) {
    return variantCompare;
  }

  const genderCompare = gender2.localeCompare(gender1);
  if (genderCompare !== 0) {
    return genderCompare;
  }

  return 0;
}

const importedImages = import.meta.glob<false, string, { default: ImageMetadata }>(
  '../../../assets/images/wiki/workers/**/*.png'
);
const filteredImages = await Promise.all(
  Object.entries(importedImages)
    .filter(([key]) => key.includes(workerData.id))
    .sort(([s1], [s2]) => sortImages(s1, s2))
    .map((m) => m[1]())
);

const buildings = workerData.data.buildings ?? [];
---

<Wrapper class="mb-3">
  <slot />

  <Infobox slot="infobox" class="w-auto flex-shrink-1">
    <WorkerName slot="title" {...Astro.props} />

    <div class="text-center">
      <swiper-container
        pagination
        pagination-dynamic-bullets
        autoplay
        autoplay-delay="2000"
        autoplay-pause-on-mouse-enter
        autoplay-disable-on-interaction="false"
        loop
        loop-add-blank-slides
        slides-per-view="2"
        slides-per-group="2"
        no-swiping
        no-swiping-selector="*"
        width="300"
        space-between="20"
        style={{
          width: '300px',
          '--swiper-pagination-bottom': 0
        }}
      >
        {
          filteredImages.map((image) => (
            <swiper-slide>
              <Image src={image.default} alt="" width={150} />
            </swiper-slide>
          ))
        }
      </swiper-container>
    </div>

    {
      buildings.length !== 0 && (
        <>
          <hr />
          <div class="grid" style="--bs-columns: 2;">
            <p class="m-0">
              <b>{buildings.length > 1 ? 'Buildings:' : 'Building:'}</b>
            </p>
            <div>
              {buildings.map((building) => (
                <p class="m-0">
                  <BuildingName name={building.id} />
                </p>
              ))}
            </div>
          </div>
        </>
      )
    }
  </Infobox>
</Wrapper>
