---
import { getBuildingData, getBuildingName } from '@utils/building';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';

import Recipe from '../recipes/Recipe.astro';
import WorkerName from '../WorkerName.astro';
import Infobox from './Infobox.astro';

interface Props {
  name: string;
}

const { name } = Astro.props;
const buildingData = await getBuildingData(name);

const importedImage = await import(`../../../assets/images/wiki/buildings/${name}.png`).then((f) => f.default);

const research = (
  await getCollection('research', (filter) =>
    filter.data.effects
      ? Object.keys(filter.data.effects).find((effect) => effect.replace('blockhut', '') === name)
      : false
  )
).slice(0, 1)[0];

const workers = buildingData.data.workers ?? [];
const recipes = buildingData.data.recipes ?? [];
---

<div class="row infobox-wrapper">
  <div class="flex-fill">
    <slot />
  </div>

  <Infobox title={buildingData.data.name} class="w-auto flex-shrink-1">
    <div class="text-center">
      <Image src={importedImage} alt={`${getBuildingName(buildingData, false)} block`} width={250} />
    </div>

    {
      workers.length !== 0 && (
        <>
          <hr />
          <div class="row">
            <div class="col-auto">
              <p class="m-0">
                <b>{workers.length > 1 ? 'Workers:' : 'Worker:'}</b>
              </p>
            </div>
            <div class="col">
              {workers.map((worker) => (
                <p class="m-0">
                  <WorkerName name={worker.id} link />
                </p>
              ))}
            </div>
          </div>
        </>
      )
    }

    {
      recipes.length !== 0 && (
        <>
          <hr />
          <div class="row">
            <div class="col-auto">
              <p class="m-0">
                <b>{recipes.length > 1 ? 'Recipe:' : 'Recipes:'}</b>
              </p>
            </div>
            <div class="col">
              {recipes.map((recipe) => (
                <Recipe recipe={recipe} />
              ))}
            </div>
          </div>
        </>
      )
    }

    <hr />
    <div class="row">
      <div class="col-12">
        <p class="m-0">
          <b>Research:&nbsp;</b>
          {
            research !== undefined ? (
              <>
                <span>You must research "</span>
                <a href={`/wiki/systems/research#research_${research.id}`}>{research.data.name}</a>
                <span>" to unlock this building!</span>
              </>
            ) : (
              <>No research is required for this building.</>
            )
          }
        </p>
      </div>
    </div>
  </Infobox>
</div>

<style lang="scss">
  @import '../../../css/bootstrap-vars.scss';

  .infobox-wrapper {
    display: flex;
    flex-direction: row;
  }

  .row {
    flex-wrap: nowrap !important;
  }

  @include media-breakpoint-down(md) {
    .infobox-wrapper {
      flex-direction: column-reverse;
      align-items: center;
    }
  }
</style>
