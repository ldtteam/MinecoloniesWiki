---
import VersionContent from '@components/version/VersionContent.astro';
import { getItemData, type ItemData } from '@utils/items';
import { getEntry } from 'astro:content';

interface Props {
  itemId?: string;
  name: string;
}

type CombinedItemTitle = {
  name: string;
  link: string;
};

const { itemId, name } = Astro.props;

const wikiPage = await getEntry('wiki', 'items/' + name);

let itemData: ItemData | CombinedItemTitle | undefined;
if (wikiPage !== undefined) {
  if (wikiPage.data.type === 'item') {
    itemData = await getItemData(wikiPage.data.item.id);
  } else if (wikiPage.data.type === 'item-combined') {
    itemData = {
      name: wikiPage.data.title,
      link: `/wiki/${wikiPage.slug}`
    };
  }
}

if (itemData === undefined) {
  itemData = await getItemData(name);
}
---

{
  'name' in itemData ? (
    itemId !== name && itemData.link ? (
      <a href={itemData.link}>{itemData.name}</a>
    ) : (
      <span>{itemData.name}</span>
    )
  ) : (
    itemData.data.map(async (item) => (
      <VersionContent versions={item.versions} inline>
        {itemId !== name && item.link ? <a href={item.link}>{item.name}</a> : <span>{item.name}</span>}
      </VersionContent>
    ))
  )
}
