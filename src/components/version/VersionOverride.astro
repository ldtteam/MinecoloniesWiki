---
import type { Overrideable, OverrideableFieldGetter } from '@utils/override';
import { getOverrideValues } from '@utils/override';
import type { HTMLTag } from 'astro/types';

import VersionContent from './VersionContent.astro';

interface Props<V, O extends Overrideable<V>, T> {
  value: O;
  fieldGetter: OverrideableFieldGetter<O, T>;
  default: T;
  inline?: boolean;
  as?: HTMLTag;
}

const {
  value,
  fieldGetter,
  default: def,
  inline = true,
  as
} = Astro.props as Props<unknown, Overrideable<unknown>, unknown>;
const values = await getOverrideValues(value, fieldGetter, def);
---

{
  values.values.values().map(async (value) => (
    <VersionContent versions={value.versions} inline={inline} as={as}>
      {value.value}
    </VersionContent>
  ))
}
