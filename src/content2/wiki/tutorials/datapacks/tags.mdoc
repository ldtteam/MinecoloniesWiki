---
type: section
title: Tags
group: tutorials/datapacks
---

**Tags** are a vanilla Minecraft feature, used to give properties to specific items (if within the `tags\items` directory) or blocks (if within `tags\blocks` directory). Item tags also used for Ore Dictionary behaviors. Tags apply a property based on the file name: `\data\minecolonies\tags\blocks\concrete.json` applies a `#minecolonies:concrete` tag to all blocks matching the Resource Locations contained within it or within Block Tags matching that Resource Location, and that `#minecolonies:concrete` block tag determines what materials a {% worker name="concretemixer" /%} can mine.

All Tag JSONs operate in **merge** mode by default. They can instead override, removing any other blocks or items from JSONs matching that name that were loaded first. To use override mode, you must explicitly set `"replace": true` in addition to the `"values": ""` name-value pair. This `"replace"` name is not mandatory for merge mode, but for ease of readability, it's strongly encouraged to use `"replace": false` if intentionally adding to existing Tags.

The only other supported name-value pair for a Tag JSON is the `"value":` Name. This accepts an Array of identifiers or tags as individual Resource Location strings. These string must contain the namespace and an item identifier in resource location format, matching either a single object of that tag's type, or another Tag prefixed by the # symbol. Missing or mistyped targets may cause the file to be ignored, or for Minecraft to throw an error on world load. Use the Advanced Tooltip functionality (F3 + H) in Minecraft to turn on display of Resource Locations in item tooltips for help finding specific strings.

A typical tag file to add cobblestone and every type of vanilla anvil to a Tag would thus look like: 
 
```json
{
    "replace": false,
    "values": [
      "minecraft:cobblestone",
      "#minecraft:anvil"
    ]
}
```

**While this example works for both Blocks and Items, it's a rare exception. Block Tags and Item Tags are entirely different things, and while some Block Tags have Item Tag equivalents, many do not. Some mods will *only* use Item Tags or Block Tags; some items, even vanilla items, have different Resource Locations when in Item form than in Block form.**

### Block Tags

 **Block Tags** are loaded in the `tags/blocks` directory. MineColonies reads the following Block Tags:
 
| Namespace      | Block Tag             | Effect                                                                                                                                                         |
| -------------- | --------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `minecolonies` | `concrete`            | Blocks that a {% worker name="concretemixer" /%} can mine.                                                                                                     |
| `minecolonies` | `decoblocks`          | Blocks that are not replaced by builders during construction phases.                                                                                           |
| `minecolonies` | `indestructable`      | Blocks that can't be destroyed. Prevents these blocks from being overwritten by Survival Build Tools, and has special considerations for colonist pathfinding. |
| `minecolonies` | `orechanceblocks`     | Blocks that which will have a low chance of dropping extra ores when mined by a {% worker name="miner" /%}.                                                    |
| `minecolonies` | `pathblocks`          | Colonists walk faster on and preferentially follow roads made of these blocks.                                                                                 |
| `minecolonies` | `protectionexception` | Blocks that can be used, or alt-clicked, within a [colony's protection range](/wiki/systems/protection), even by neutral or enemy players.                     |
| `forge`        | `dirt`                | Blocks that can be used as farmland by {% worker name="farmer" /%}.                                                                                            |
| `minecraft`    | `beds`                | Blocks that can be used by colonists to rest, if included in a schematic.                                                                                      |
| `minecraft`    | `doors`               | Used for pathfinding.                                                                                                                                          |
| `minecraft`    | `leaves`              | Used to determine eligible trees for the {% worker name="forester" /%}.                                                                                        |
| `minecraft`    | `logs`                | Used to determine eligible trees for the {% worker name="forester" /%}.                                                                                        |
| `minecraft`    | `shroomlight`         | Used to determine eligible trees for the {% worker name="forester" /%}.                                                                                        |
| `minecraft`    | `wart_blocks`         | Used to determine eligible trees for the {% worker name="forester" /%}.                                                                                        |
 
### Item Tags

 Item Tags are loaded in the `tags\items` directory. MineColonies reads the following Item Tags:
 
| Namespace      | tags\items                   | Effect                                                                                                                                                                                     |
| -------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `minecolonies` | `breakable_ore`              | (1.18+ only) Items with this tag are processed by the smelter using fortune                                                                                                                |
| `minecolonies` | `compostables`               | Items that can be placed into a Composter, and give moderate compost.                                                                                                                      |
| `minecolonies` | `compostables_poor`          | Items that can be placed into a Composter, and give little compost.                                                                                                                        |
| `minecolonies` | `compostables_rich`          | Items that can be placed into a Composter, and give a lot of compost.                                                                                                                      |
| `minecolonies` | `concrete_powder`            | Crafted and placed by a {% worker name="concretemixer" /%}                                                                                                                                 |
| `minecolonies` | `florist_flowers`            | Grown by the {% worker name="florist" /%}, if they have a valid block form, at building level 3 or higher.                                                                                 |
| `minecolonies` | `fungi`                      | Items that can be grown by a {% worker name="forester" /%} on Warped Nylium or Crimson Nylium.                                                                                             |
| `minecolonies` | `meshes`                     | Items that can be held as meshes by a {% worker name="sifter" /%}. This only allows the Sifter to use the tool, it does not add benefits to doing so. See CrafterRecipes for more details. |
| `minecolonies` | `raw_ore`                    | (1.18+ only) Items with this tag, if processable in a furnace, can be processed at the smeltery                                                                                            |
| `minecolonies` | `reducible_ingredient`       | Items that may be reduced in cost by one, to a minimum of one, when in a colonist recipe that originally required more than one of the item.                                               |
| `minecolonies` | `reducible_product_excluded` | Output items that can never have their crafter recipe efficiency improved. Most storage blocks or reversable recipes should be in this tag, to avoid possible infinite item loops.         |
| `forge`        | `crops_wheat`                | The {% worker name="baker" /%} can cook any recipe including an in this tag, if the output is a food item.                                                                                 |
| `forge`        | `glass`                      | All items with this tag, if produces in a furnace from an item tagged with #forge:glass, can be made at the Glassblower.                                                                   |
| `forge`        | `ores`                       | All items with this tag are treated as ores by the miner, and in 1.16.5, if processable in a furnace, can be processed in the smeltery.                                                    |
| `forge`        | `sand`                       | All items with this tag, if smeltable into an item tagged with #forge:glass, can be made at the Glassblower.                                                                               |
| `forge`        | `seeds`                      | Only items with this tag are valid to set in a Scarecrow, and are planted by a Farmer.                                                                                                     |
| `minecraft`    | `flowers`                    | Used by the {% worker name="beekeeper" /%} to breed bees.                                                                                                                                  |
| `minecraft`    | `fishes`                     | Used by the {% worker name="fisher" /%} to render fish on bandolier.                                                                                                                       |
| `minecraft`    | `leaves`                     | Items that Builders will place 'for free', without having in their inventory.                                                                                                              |
| `minecraft`    | `logs`                       | Recipes consisting of 75% or more this tag and #minecraft:planks can be taught to the Sawmill.                                                                                             |
| `minecraft`    | `planks`                     | Recipes consisting of 75% or more this tag and #minecraft:logs can be taught to the Sawmill. A stack is stored by the Miner.                                                               |
| `minecraft`    | `saplings`                   | Used by the Forester to grow trees.                                                                                                                                                        |
| `minecraft`    | `slabs`                      | A stack is stored by the Miner.                                                                                                                                                            |
| `minecraft`    | `small_flowers`              | Grown by a building level 1 or 2 {% worker name="florist" /%}, if they have a valid block form, and are in #minecolonies:florist_flowers.                                                  |
| `minecraft`    | `wool`                       | Used to by the Dyer to produce white wool, if not already White Wool.                                                                                                                      |

**Some Vanilla and Forge Item Tags are very expansive, or are used by some mods in ways that might surprise you. See [list of tags](https://minecraft.wiki/w/Tag#List_of_tags) for Minecraft behaviors.**

### Crafter Item Tags

Additionally, some **Item Tags** are used to control what recipes can be taught to a worker by a player in-game. Each worker has a different set of tags. For a full list, see [here](https://github.com/ldtteam/minecolonies/tree/version/main/src/datagen/generated/minecolonies/data/minecolonies/tags/items).
 
| Item Tag                | Effect                                                                                                                                            |
| ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |
| `x_product_excluded`    | Items that cannot be made by this worker. Overrides all other crafter Tags.                                                                       |
| `x_product`             | Items that can be made by this worker.                                                                                                            |
| `x_ingredient_excluded` | Items that cannot be used to craft by this worker, unless the recipe product is in `x_product`.                                                   |
| `x_ingredient`          | Items that can be used to craft by this worker, unless the ingredient is in `x_ingredient_excluded`, or the recipe output is in `x_product.json`. |

A few colonists have other hard-coded rules that are not dependent on tags. The {% worker name="blacksmith" /%} can make all tools, swords, armor, hoes, and shields. {% worker name="cook" /%} will always accept recipes for items that have valid foods as results.